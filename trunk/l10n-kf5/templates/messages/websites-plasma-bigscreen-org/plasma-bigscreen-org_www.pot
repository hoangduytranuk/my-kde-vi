#
msgid ""
msgstr ""
"Project-Id-Version: websites-plasma-bigscreen-org 1.0\n"
"Report-Msgid-Bugs-To: https://bugs.kde.org\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: config.yaml:0
msgid "Project"
msgstr ""

#: config.yaml:0
msgid "Documentation"
msgstr ""

#: config.yaml:0
msgid "Community"
msgstr ""

#: config.yaml:0
msgid "Apps"
msgstr ""

#: content/faq.md:0
msgid "Frequently Asked Questions"
msgstr ""

#: content/faq.md:0
msgid "FAQ"
msgstr ""

#: content/faq.md:5
msgid "Help! My TV remote does not work, how do I fix it?"
msgstr ""

#: content/faq.md:8
msgid ""
"Many TV manufacturers require HDMI-CEC mode to be enabled manually, one "
"needs to refer to the TV user guide to figure out how to configure the HDMI-"
"CEC option on their television set. The HDMI-CEC option can be found under "
"various names depending on the TV manufacturers, some for example: (TCL TV: "
"T-Link, Panasonic TV: Viera Link, Samsung TV: Anynet+, Sony TV: Bravia "
"Sync)."
msgstr ""

#: content/faq.md:10
msgid ""
"Also make sure your Plasma Bigscreen device is actually supported by libcec,"
" [check their supported hardware](https://github.com/Pulse-"
"Eight/libcec#supported-hardware)."
msgstr ""

#: content/faq.md:12
msgid ""
"Some buttons on my TV remote are not working, I can’t exit an application or"
" use the back button properly. How do I fix it?"
msgstr ""

#: content/faq.md:16
msgid ""
"HDMI-CEC on the beta image is in a testing phase. We have only been able to "
"test the functionality on a few selected range of TV sets and have mapped TV"
" remotes on the basis of those working devices. You can map and test your TV"
" remote following a few simple steps of debugging and editing files listed "
"below."
msgstr ""

#: content/faq.md:18
msgid "_Test if the KEY is working with HDMI-CEC and extract it’s KEY CODE:_"
msgstr ""

#: content/faq.md:25
msgid ""
"Once the script is running, press the button on your TV remote to extract "
"its KEY CODE, if no KEY CODE is found the KEY might not be part of HDMI-CEC "
"controls enabled on your TV set, refer to the TV User Guide to know which "
"keys are enabled under your TV manufacturers HDMI-CEC implementation."
msgstr ""

#: content/faq.md:27
msgid "_Adding the found KEY CODE and mapping it in the CEC daemon:_"
msgstr ""

#: content/faq.md:34
msgid "Locate KEYMAP = {} in the daemon script"
msgstr ""

#: content/faq.md:35
msgid ""
"Add your KEY CODE in the following format to the list: “9: u.KEY\\_HOMEPAGE”"
msgstr ""

#: content/faq.md:36
msgid ""
"In the above example “u.KEY\\_HOMEPAGE” is mapped to the home button that is"
" used to exit an application"
msgstr ""

#: content/faq.md:37
msgid "“9” being the Key Code"
msgstr ""

#: content/faq.md:38
msgid "“u.KEY\\_HOMEPAGE” being the action the key should perform"
msgstr ""

#: content/faq.md:40
msgid ""
"I have a generic USB remote but it’s missing the home key, how do I exit "
"applications?"
msgstr ""

#: content/faq.md:43
msgid ""
"Not all generic USB remotes are built alike, therefore we recommend using a "
"tested product like the “Wechip G20 Air Mouse With Microphone Remote”. If "
"in-case you are unable to get your hands on one, you can still map an "
"existing key on the remote."
msgstr ""

#: content/faq.md:45
msgid "_Mapping the window close button to a button on a USB remote:_"
msgstr ""

#: content/faq.md:52
msgid "Find the entry “Window Close” located under `[Kwin]`"
msgstr ""

#: content/faq.md:53
msgid "Assign your button to the “Window Close” entry"
msgstr ""

#: content/faq.md:54
msgid ""
"Example: `Window "
"Close=Alt+F4\\t’YourButtonHere’,Alt+F4\\t’YourButtonHere’,Close Window`"
msgstr ""

#: content/faq.md:56
msgid ""
"Voice applications do not start on boot and I see a blank screen. What "
"should I do?"
msgstr ""

#: content/faq.md:58
msgid ""
"Voice applications are only accessible once MyCroft is ready and has "
"started, you will be notified on the top panel when MyCroft has started and "
"is in a ready state."
msgstr ""

#: content/faq.md:60
msgid "How do I exit applications using a external keyboard?"
msgstr ""

#: content/faq.md:63
msgid ""
"“Alt+F4” is the general shortcut assigned to closing applications using a "
"external keyboard. Custom keys can be assigned to the following file for "
"various actions:"
msgstr ""

#: content/faq.md:70
msgid ""
"What is the hot key assigned to activate MyCroft voice control without a USB"
" mic remote?"
msgstr ""

#: content/faq.md:72
msgid ""
"There is no hotkey assigned to MyCroft, the Generic USB remotes that have a "
"mic button only activate the mic input on the USB remote hardware, to use "
"MyCroft one needs to activate it with the hot word “Hey Mycroft”."
msgstr ""

#: content/faq.md:74
msgid ""
"To use MyCroft one does not require a USB mic enabled remote specifically, "
"any microphone that can be connected to your device should work."
msgstr ""

#: content/faq.md:76
msgid ""
"For issues and troubleshooting your microphone not working one can refer to:"
" https://mycroft-ai.gitbook.io/docs/using-mycroft-ai/troubleshooting/audio-"
"troubleshooting."
msgstr ""

#: content/faq.md:78
msgid "How to contribute & upload your custom keymap for CEC?"
msgstr ""

#: content/faq.md:80
msgid ""
"Currently the development repository of the CEC daemon can be found at "
"https://invent.kde.org/adityam/easycec with instructions on how to add a "
"device with custom keymap."
msgstr ""

#: content/faq.md:82
msgid "Can Android apps work on Plasma Bigscreen?"
msgstr ""

#: content/faq.md:85
msgid ""
"There are projects out there like [Anbox](https://anbox.io/) which is "
"Android running inside a Linux container, and use the Linux kernel to "
"execute applications to achieve near-native performance. This could be "
"leveraged in the future to have Android apps running on top of a GNU/Linux "
"system with the Plasma Bigscreen platform but it's a complicated task, and "
"as of *today* (August 5th, 2021) some distributions already support Anbox "
"and you can run Plasma Bigscreen on top of those distributions."
msgstr ""

#: content/faq.md:87
msgid "Can I run Plasma Bigscreen on my TV or setup-box?"
msgstr ""

#: content/faq.md:89
msgid "Currently, Plasma Bigscreen runs on the following device types:"
msgstr ""

#: content/faq.md:91
msgid ""
"**(Recommended) Raspberry Pi 4:** We offer official images built for the "
"Raspberry Pi 4 on top of KDE Neon."
msgstr ""

#: content/faq.md:95
msgid ""
"**postmarketOS devices:** postmarketOS is a distribution based on Alpine "
"Linux that can be installed on Android smartphones but also on SBC's like "
"the Raspberry Pi 4 and other devices. Please find your device from the [list"
" of supported devices](https://wiki.postmarketos.org/wiki/Devices) and see "
"what's working, then you can follow the [pmOS installation "
"guide](https://wiki.postmarketos.org/wiki/Installation_guide) to install it "
"on your device. Your mileage may vary depending on the device in use and "
"when you use a device in the testing category it is **not** necessarily "
"representative of the current state of Plasma Bigscreen."
msgstr ""

#: content/faq.md:97
msgid "I've installed Plasma Bigscreen, what is the login password?"
msgstr ""

#: content/faq.md:99
msgid ""
"If you've installed the reference KDE Neon image for the Raspberry Pi 4, the"
" password and username are both \"mycroft\", and you can then change the "
"password afterwards by running \"passwd\" from a tty."
msgstr ""

#: content/faq.md:101
msgid "What's the state of the project?"
msgstr ""

#: content/faq.md:103
msgid ""
"Plasma Bigscreen is currently under heavy development and is not intended to"
" be used as a daily driver."
msgstr ""

#: content/get.md:0
msgid "Distributions offering Plasma Bigscreen"
msgstr ""

#: content/get.md:5
msgid "Neon based reference rootfs"
msgstr ""

#: content/get.md:7
msgid "![](/img/neon.svg)"
msgstr ""

#: content/get.md:11
msgid ""
"Image based on KDE Neon. KDE Neon itself is based upon Ubuntu 20.04 (focal)."
" This image is based on the dev-unstable branch of KDE Neon, and always "
"ships the latest versions of KDE frameworks, KWin and Plasma Bigscreen "
"compiled from git master."
msgstr ""

#: content/get.md:13 content/get.md:36
msgid "Download:"
msgstr ""

#: content/get.md:15
msgid ""
"[Raspberry Pi 4](https://sourceforge.net/projects/bigscreen/files/rpi4/beta)"
msgstr ""

#: content/get.md:17
msgid "Installation"
msgstr ""

#: content/get.md:20
msgid ""
"Download the image, uncompress it and flash it to a SD-card using `dd` or a "
"graphical tool. The Raspberry Pi will automatically boot from a SD-Card."
msgstr ""

#: content/get.md:22
msgid "For a complete step-by-step readme, [click here](/manual)."
msgstr ""

#: content/get.md:24
msgid "postmarketOS"
msgstr ""

#: content/get.md:26
msgid "![](/img/pmOS.svg)"
msgstr ""

#: content/get.md:28
msgid ""
"PostmarketOS (pmOS) is a pre-configured Alpine Linux that can be installed "
"on smartphones, SBC's and other mobile devices. View the [device "
"list](https://wiki.postmarketos.org/wiki/Devices) to see the progress for "
"supporting your device."
msgstr ""

#: content/get.md:32
msgid ""
"For devices that do not have prebuilt images, you will need to flash it "
"manually using the `pmbootstrap` utility. Follow instructions "
"[here](https://wiki.postmarketos.org/wiki/Installation_guide). Be sure to "
"also check the device's wiki page for more information on what is working."
msgstr ""

#: content/get.md:34
msgid "[Learn more](https://postmarketos.org)"
msgstr ""

#: content/get.md:38
msgid "[Community Devices](https://postmarketos.org/download/)"
msgstr ""

#: content/join.md:0
msgid "Join Plasma Bigscreen"
msgstr ""

#: content/join.md:5
msgid ""
"If you'd like to contribute to the amazing free software for TV's and setup-"
"boxes, [join us - we always have a task for you](/contributing/)!"
msgstr ""

#: content/join.md:7
msgid "Plasma Bigscreen specific channels:"
msgstr ""

#: content/join.md:9
msgid ""
"[![](/img/matrix.svg)Matrix (most active)](https://matrix.to/#/#plasma-"
"bigscreen:kde.org)"
msgstr ""

#: content/join.md:11
msgid "[![](/img/telegram.svg)Telegram](https://t.me/plasmabigscreen)"
msgstr ""

#: content/join.md:14
msgid "Plasma Biscreen related project channels:"
msgstr ""

#: content/join.md:16
msgid ""
"[![](/img/irc.png)#plasma on Freenode "
"(IRC)](https://kiwiirc.com/nextclient/chat.freenode.net/#plasma)"
msgstr ""

#: content/join.md:18
msgid ""
"[![](/img/mail.svg)Plasma development mailing "
"list](https://mail.kde.org/mailman/listinfo/plasma-devel)"
msgstr ""

#: content/screenshots.md:0
msgid "Screenshots"
msgstr ""

#: content/screenshots.md:0
msgid "Plasma Bigscreen homescreen"
msgstr ""

#: content/vision.md:0
msgid "Our Vision"
msgstr ""

#: content/vision.md:0
msgid "Vision"
msgstr ""

#: content/vision.md:6
msgid ""
"Plasma Bigscreen aims to become a complete and open software system for TV's"
" and setup-boxes.<br /> It is designed to give privacy-aware users back "
"control over their information, communication and media."
msgstr ""

#: content/vision.md:9
msgid ""
"Plasma Bigscreen takes a pragmatic approach and is inclusive to 3rd party "
"software, allowing the user to choose which applications and services to "
"use, while providing a seamless experience across multiple devices.<br /> "
"Plasma Bigscreen implements open standards and is developed in a transparent"
" process that is open for anyone to participate in."
msgstr ""

#: i18n/en.yaml:0
msgid "Plasma Bigscreen"
msgstr ""

#: i18n/en.yaml:0
msgid "Plasma on your TV"
msgstr ""

#: i18n/en.yaml:0
msgid "This project uses various open-source components like"
msgstr ""

#: i18n/en.yaml:0
msgid "Mycroft AI"
msgstr ""

#: i18n/en.yaml:0
msgid "LibCEC"
msgstr ""

#: i18n/en.yaml:0
msgid "A privacy-respecting, open source and secure TV ecosystem"
msgstr ""

#: i18n/en.yaml:0
msgid "Open up"
msgstr ""

#: i18n/en.yaml:0
msgid ""
"Plasma Bigscreen is an open-source user interface for TV's. Running on top "
"of a Linux distribution, Plasma Bigscreen turns your TV or setup-box into a "
"fully hackable device. A big launcher giving you easy access to any "
"installed apps and skills. Controllable via voice or TV remote."
msgstr ""

#: i18n/en.yaml:0
msgid "Install"
msgstr ""

#: i18n/en.yaml:0
msgid "Contribute"
msgstr ""

#: i18n/en.yaml:0
msgid ""
"Using the multi-platform toolkit Qt, the flexible extensions of KDE "
"Frameworks plus the power of Plasma Shell, Plasma Bigscreen is built with "
"technology which feels equally at home on the desktop, mobile devices and "
"TV."
msgstr ""

#: i18n/en.yaml:0
msgid "KWin and Wayland"
msgstr ""

#: i18n/en.yaml:0
msgid ""
"Wayland is the next-generation protocol for delivering cutting-edge "
"interfaces which are silky smooth. KWin is the battle-tested window manager "
"which implements Wayland, delivering a polished and reliable experience on "
"both the desktop and mobile devices."
msgstr ""

#: i18n/en.yaml:0
msgid "Making full use of Open Source"
msgstr ""

#: i18n/en.yaml:0
msgid ""
"Plasma Bigscreen combines many powerful software tools from established "
"projects to make a whole greater than the sum of its parts.<br /> MyCroft "
"allows us to control our TV with just our voice, CEC makes it possible to "
"control the interface using your normal TV remote control, and Pulseaudio "
"drives the Plasma Bigscreen sound system."
msgstr ""

#: i18n/en.yaml:0
msgid "Adapting to your needs"
msgstr ""

#: i18n/en.yaml:0
msgid ""
"Being based on the most flexible desktop in the world means you can truly "
"make your TV your own. Add and modify widgets, change colour schemes, fonts,"
" and much, much more."
msgstr ""

#: i18n/en.yaml:0
msgid "What is Plasma Bigscreen?"
msgstr ""

#: i18n/en.yaml:0
msgid ""
"Plasma Bigscreen offers a free (as in freedom and beer), user-friendly, "
"privacy-enabling and customizable platform for TV's and setup-boxes. It is "
"shipped by different distributions (ex. postmarketOS, KDE Neon), and can run"
" on the devices that are supported by the distribution."
msgstr ""

#: i18n/en.yaml:0
msgid "Why?"
msgstr ""

#: i18n/en.yaml:0
msgid ""
"The most common offerings on TV's and setup-boxes lack openness and trust. "
"In a world of walled gardens, we want to create a platform that respects and"
" protects the user’s privacy to the fullest. We want to provide a fully open"
" base which others can help develop and use for themselves, or in their "
"products."
msgstr ""
